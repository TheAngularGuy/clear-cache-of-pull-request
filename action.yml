name: Clear cache of pull request
description: A GitHub action to clear the cache of a pull request.

branding:
  icon: archive
  color: purple

inputs:
  branch:
    description: The branch to delete the cache from
    default: refs/pull/${{ github.event.pull_request.number }}/merge
  github-token:
    description: The GitHub token to use
    required: true

runs:
  using: 'composite'
  steps:
    - name: Clear cache
      uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          function bytesToHumanReadable(bytes) {
            const kilobytes = bytes / 1024;
            if (kilobytes < 1024) {
              return kilobytes.toFixed(2) + " Ko";
            } else {
              const megabytes = kilobytes / 1024;
              return megabytes.toFixed(2) + " Mo";
            }
          }
          
          const response = await github.rest.actions.getActionsCacheList({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: '${{ inputs.branch }}',
          });
          let totalSizeCleared = 0;
          const caches = response.data.actions_caches;
          const calls = [];
          for (const cache of caches) {
            const key = cache.key;
            const call = github.rest.actions.deleteActionsCacheByKey({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key,
            });
            calls.push(call);
            console.log(`Will deleted cache with key: ${ key }, size: ${ cache.size_in_bytes }`);
            totalSizeCleared += cache.size_in_bytes;
          }
          await Promise.all(calls);
          let summary;
          if (caches.length === 0) {
            summary = `No cache found for branch ${ inputs.branch }`;
          } else if (calls.length === 1) {
            summary = `Cleared 1 cache, total size: ${ bytesToHumanReadable(totalSizeCleared) } ðŸš®`;
          } else {
            summary = `Cleared ${ caches.length } caches, total size: ${ bytesToHumanReadable(totalSizeCleared) } ðŸš®`;
          }
          console.log(summary);
          return summary;
          
